
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightSISINOrightSTRINGrightPARENTrightCOMMAleftSUMARESTAleftMULTDIVrightENDrightENTEROrightEQUALSrightCOMILLArightVARIABLEAND COMA COMENTARIO COMILLA COMMA CORDER CORIZQ DECIMAL DISTINTO DIV END ENTERO ENTRE EQUALS IGUAL LLADER LLAIZQ MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MIENTRAS MINUSMINUS MODULO MULT NOT OR PARA PARENT PLUSPLUS POTENCIA RESTA SI SINO STRING SUMA VARIABLEdeclaracion : SIdeclaracion : EQUALSdeclaracion : SINOexpresion :  COMMAdeclaracion : expresion\n    expresion  :   expresion SUMA expresion\n                |   expresion RESTA expresion\n                |   expresion MULT expresion\n                |   expresion DIV expresion\n                |   expresion POTENCIA expresion\n                |   expresion MODULO expresion\n    \n    expresion  : LLAIZQ expresion LLADER\n                | CORIZQ expresion CORDER\n    \n    expresion   :  expresion MENORQUE expresion \n                |  expresion MAYORQUE expresion \n                |  expresion MENORIGUAL expresion \n                |   expresion MAYORIGUAL expresion \n                |   expresion IGUAL expresion \n                |   expresion DISTINTO expresion\n                |   expresion COMILLA expresion\n    expresion : ENTEROexpresion : PARENTexpresion : DECIMALexpresion : VARIABLEexpresion : ENDexpresion : STRING'
    
_lr_action_items = {'SI':([0,],[2,]),'EQUALS':([0,],[3,]),'SINO':([0,],[4,]),'COMMA':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LLAIZQ':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'CORIZQ':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ENTERO':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'PARENT':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'DECIMAL':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'VARIABLE':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'END':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'STRING':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,3,4,5,6,9,10,11,12,13,14,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[0,-1,-2,-3,-5,-4,-21,-22,-23,-24,-25,-26,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-18,-19,-20,-12,-13,]),'SUMA':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[15,-4,-21,-22,-23,-24,-25,-26,15,15,-6,-7,-8,-9,15,15,15,15,15,15,15,15,-20,-12,-13,]),'RESTA':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[16,-4,-21,-22,-23,-24,-25,-26,16,16,-6,-7,-8,-9,16,16,16,16,16,16,16,16,-20,-12,-13,]),'MULT':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[17,-4,-21,-22,-23,-24,-25,-26,17,17,17,17,-8,-9,17,17,17,17,17,17,17,17,-20,-12,-13,]),'DIV':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[18,-4,-21,-22,-23,-24,-25,-26,18,18,18,18,-8,-9,18,18,18,18,18,18,18,18,-20,-12,-13,]),'POTENCIA':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[19,-4,-21,-22,-23,-24,-25,-26,19,19,-6,-7,-8,-9,19,19,19,19,19,19,19,19,-20,-12,-13,]),'MODULO':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[20,-4,-21,-22,-23,-24,-25,-26,20,20,-6,-7,-8,-9,20,20,20,20,20,20,20,20,-20,-12,-13,]),'MENORQUE':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[21,-4,-21,-22,-23,-24,-25,-26,21,21,-6,-7,-8,-9,21,21,21,21,21,21,21,21,-20,-12,-13,]),'MAYORQUE':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[22,-4,-21,-22,-23,-24,-25,-26,22,22,-6,-7,-8,-9,22,22,22,22,22,22,22,22,-20,-12,-13,]),'MENORIGUAL':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[23,-4,-21,-22,-23,-24,-25,-26,23,23,-6,-7,-8,-9,23,23,23,23,23,23,23,23,-20,-12,-13,]),'MAYORIGUAL':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[24,-4,-21,-22,-23,-24,-25,-26,24,24,-6,-7,-8,-9,24,24,24,24,24,24,24,24,-20,-12,-13,]),'IGUAL':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[25,-4,-21,-22,-23,-24,-25,-26,25,25,-6,-7,-8,-9,25,25,25,25,25,25,25,25,-20,-12,-13,]),'DISTINTO':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[26,-4,-21,-22,-23,-24,-25,-26,26,26,-6,-7,-8,-9,26,26,26,26,26,26,26,26,-20,-12,-13,]),'COMILLA':([5,6,9,10,11,12,13,14,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[27,-4,-21,-22,-23,-24,-25,-26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-12,-13,]),'LLADER':([6,9,10,11,12,13,14,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[-4,-21,-22,-23,-24,-25,-26,43,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-18,-19,-20,-12,-13,]),'CORDER':([6,9,10,11,12,13,14,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,],[-4,-21,-22,-23,-24,-25,-26,44,-6,-7,-8,-9,-10,-11,-14,-15,-16,-17,-18,-19,-20,-12,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracion':([0,],[1,]),'expresion':([0,7,8,15,16,17,18,19,20,21,22,23,24,25,26,27,],[5,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracion","S'",1,None,None,None),
  ('declaracion -> SI','declaracion',1,'p_declaracion_coditionif','Sintactico.py',25),
  ('declaracion -> EQUALS','declaracion',1,'p_declaracion_EQUALS','Sintactico.py',29),
  ('declaracion -> SINO','declaracion',1,'p_declaracion_coditionelse','Sintactico.py',33),
  ('expresion -> COMMA','expresion',1,'p_declaracion_comma','Sintactico.py',37),
  ('declaracion -> expresion','declaracion',1,'p_declaracion_expr','Sintactico.py',41),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_operaciones','Sintactico.py',46),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_operaciones','Sintactico.py',47),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_operaciones','Sintactico.py',48),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_operaciones','Sintactico.py',49),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_operaciones','Sintactico.py',50),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_operaciones','Sintactico.py',51),
  ('expresion -> LLAIZQ expresion LLADER','expresion',3,'p_expresion_grupo','Sintactico.py',72),
  ('expresion -> CORIZQ expresion CORDER','expresion',3,'p_expresion_grupo','Sintactico.py',73),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_logicas','Sintactico.py',81),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_logicas','Sintactico.py',82),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_logicas','Sintactico.py',83),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_logicas','Sintactico.py',84),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_logicas','Sintactico.py',85),
  ('expresion -> expresion DISTINTO expresion','expresion',3,'p_expresion_logicas','Sintactico.py',86),
  ('expresion -> expresion COMILLA expresion','expresion',3,'p_expresion_logicas','Sintactico.py',87),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','Sintactico.py',103),
  ('expresion -> PARENT','expresion',1,'p_expresion_parent','Sintactico.py',107),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_decimal','Sintactico.py',111),
  ('expresion -> VARIABLE','expresion',1,'p_expresion_variable','Sintactico.py',115),
  ('expresion -> END','expresion',1,'p_expresion_end','Sintactico.py',119),
  ('expresion -> STRING','expresion',1,'p_expresion_string','Sintactico.py',123),
]
